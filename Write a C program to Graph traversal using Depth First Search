#include <stdio.h>
#include <stdlib.h>
#define MAX_VERTICES 10
struct Graph {
    int vertices;
    int** adjacency_matrix;
    int* visited;
};
struct Graph* createGraph(int vertices) {
    struct Graph* graph = (struct Graph*)malloc(sizeof(struct Graph));
    graph->vertices = vertices;
    graph->adjacency_matrix = (int**)malloc(vertices * sizeof(int*));
    graph->visited = (int*)malloc(vertices * sizeof(int));
    for (int i = 0; i < vertices; i++) {
        graph->adjacency_matrix[i] = (int*)malloc(vertices * sizeof(int));
        graph->visited[i] = 0;
    }
    return graph;
}
void DFS(struct Graph* graph, int vertex) {
    graph->visited[vertex] = 1;
    printf("%d ", vertex);
    for (int i = 0; i < graph->vertices; i++) {
        if (graph->adjacency_matrix[vertex][i] && !graph->visited[i]) {
            DFS(graph, i);
        }
    }
}

int main() {
    struct Graph* graph = createGraph(4);
    graph->adjacency_matrix[0][1] = 1;
    graph->adjacency_matrix[0][2] = 1;
    graph->adjacency_matrix[1][2] = 1;
    graph->adjacency_matrix[2][0] = 1;
    graph->adjacency_matrix[2][3] = 1;
    graph->adjacency_matrix[3][3] = 1;
    printf("Depth First Search starting from vertex 2: ");
    DFS(graph, 2);
    return 0;
}
